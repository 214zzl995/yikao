<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yikao.demo.dao.PaperDao">

    <resultMap type="com.yikao.demo.entity.Paper" id="PaperMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="courseId" column="course_id" jdbcType="INTEGER"/>
        <result property="questionType" column="question_type" jdbcType="VARCHAR"/>
        <result property="questionId" column="question_id" jdbcType="VARCHAR"/>
        <result property="paperName" column="paper_name" jdbcType="VARCHAR"/>
        <result property="timeLimit" column="time_limit" jdbcType="INTEGER"/>
        <result property="aging" column="aging" jdbcType="TIMESTAMP"/>
        <result property="createtime" column="createtime" jdbcType="TIMESTAMP"/>
        <result property="updatetime" column="updatetime" jdbcType="TIMESTAMP"/>
        <result property="price" column="price" jdbcType="NUMERIC"/>
        <result property="obj1" column="obj1" jdbcType="VARCHAR"/>
        <result property="obj2" column="obj2" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="PaperMap">
        select id,
               user_id,
               course_id,
               question_type,
               question_id,
               paper_name,
               time_limit,
               aging,
               createtime,
               updatetime,
               price,
               obj1,
               obj2
        from yikaodb.paper
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="PaperMap">
        select id,
               user_id,
               course_id,
               question_type,
               question_id,
               paper_name,
               time_limit,
               aging,
               createtime,
               updatetime,
               price,
               obj1,
               obj2
        from yikaodb.paper limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="PaperMap">
        select
        id, user_id, course_id, question_type, question_id, paper_name, time_limit, aging, createtime, updatetime, price, obj1, obj2
        from yikaodb.paper
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="courseId != null">
                and course_id = #{courseId}
            </if>
            <if test="questionType != null and questionType != ''">
                and question_type = #{questionType}
            </if>
            <if test="questionId != null and questionId != ''">
                and question_id = #{questionId}
            </if>
            <if test="paperName != null and paperName != ''">
                and paper_name = #{paperName}
            </if>
            <if test="timeLimit != null">
                and time_limit = #{timeLimit}
            </if>
            <if test="aging != null">
                and aging = #{aging}
            </if>
            <if test="createtime != null">
                and createtime = #{createtime}
            </if>
            <if test="updatetime != null">
                and updatetime = #{updatetime}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="obj1 != null and obj1 != ''">
                and obj1 = #{obj1}
            </if>
            <if test="obj2 != null and obj2 != ''">
                and obj2 = #{obj2}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into yikaodb.paper(user_id, course_id, question_type, question_id, paper_name, time_limit, aging, createtime, updatetime, price, obj1, obj2)
        values (#{userId}, #{courseId}, #{questionType}, #{questionId}, #{paperName}, #{timeLimit}, #{aging}, #{createtime}, #{updatetime}, #{price}, #{obj1}, #{obj2})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into yikaodb.paper(user_id, course_id, question_type, question_id, paper_name, time_limit, aging, createtime, updatetime, price, obj1, obj2)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.courseId}, #{entity.questionType}, #{entity.questionId}, #{entity.paperName}, #{entity.timeLimit}, #{entity.aging}, #{entity.createtime},
            #{entity.updatetime}, #{entity.price}, #{entity.obj1}, #{entity.obj2})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into yikaodb.paper(user_id, course_id, question_type, question_id, paper_name, time_limit, aging, createtime, updatetime, price, obj1, obj2)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.courseId}, #{entity.questionType}, #{entity.questionId}, #{entity.paperName}, #{entity.timeLimit}, #{entity.aging}, #{entity.createtime},
            #{entity.updatetime}, #{entity.price}, #{entity.obj1}, #{entity.obj2})
        </foreach>
        on duplicate key update
        user_id = values(user_id) , course_id = values(course_id) , question_type = values(question_type) , question_id = values(question_id) , paper_name = values(paper_name) ,
        time_limit = values(time_limit) , aging = values(aging) , createtime = values(createtime) , updatetime = values(updatetime) , price = values(price) , obj1 = values(obj1) ,
        obj2 = values(obj2)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update yikaodb.paper
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="courseId != null">
                course_id = #{courseId},
            </if>
            <if test="questionType != null and questionType != ''">
                question_type = #{questionType},
            </if>
            <if test="questionId != null and questionId != ''">
                question_id = #{questionId},
            </if>
            <if test="paperName != null and paperName != ''">
                paper_name = #{paperName},
            </if>
            <if test="timeLimit != null">
                time_limit = #{timeLimit},
            </if>
            <if test="aging != null">
                aging = #{aging},
            </if>
            <if test="createtime != null">
                createtime = #{createtime},
            </if>
            <if test="updatetime != null">
                updatetime = #{updatetime},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="obj1 != null and obj1 != ''">
                obj1 = #{obj1},
            </if>
            <if test="obj2 != null and obj2 != ''">
                obj2 = #{obj2},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from yikaodb.paper
        where id = #{id}
    </delete>

</mapper>